<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbxy.ssm.app.repair.mapper.RepairsMapper">
  <resultMap id="BaseResultMap" type="com.hbxy.ssm.app.repair.model.Repairs">
    <id column="repairs_id" jdbcType="VARCHAR" property="repairsId" />
    <result column="repairs_no" jdbcType="VARCHAR" property="repairsNo" />
    <result column="repairs_price" jdbcType="VARCHAR" property="repairsPrice" />
    <result column="repairs_name" jdbcType="VARCHAR" property="repairsName" />
    <result column="repairs_number" jdbcType="INTEGER" property="repairsNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    repairs_id, repairs_no, repairs_price, repairs_name, repairs_number
  </sql>
  <select id="selectByExample" parameterType="com.hbxy.ssm.app.repair.model.RepairsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ap_repairs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ap_repairs
    where repairs_id = #{repairsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ap_repairs
    where repairs_id = #{repairsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hbxy.ssm.app.repair.model.RepairsExample">
    delete from ap_repairs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hbxy.ssm.app.repair.model.Repairs">
    insert into ap_repairs (repairs_id, repairs_no, repairs_price, 
      repairs_name, repairs_number)
    values (#{repairsId,jdbcType=VARCHAR}, #{repairsNo,jdbcType=VARCHAR}, #{repairsPrice,jdbcType=VARCHAR}, 
      #{repairsName,jdbcType=VARCHAR}, #{repairsNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hbxy.ssm.app.repair.model.Repairs">
    insert into ap_repairs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="repairsId != null">
        repairs_id,
      </if>
      <if test="repairsNo != null">
        repairs_no,
      </if>
      <if test="repairsPrice != null">
        repairs_price,
      </if>
      <if test="repairsName != null">
        repairs_name,
      </if>
      <if test="repairsNumber != null">
        repairs_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="repairsId != null">
        #{repairsId,jdbcType=VARCHAR},
      </if>
      <if test="repairsNo != null">
        #{repairsNo,jdbcType=VARCHAR},
      </if>
      <if test="repairsPrice != null">
        #{repairsPrice,jdbcType=VARCHAR},
      </if>
      <if test="repairsName != null">
        #{repairsName,jdbcType=VARCHAR},
      </if>
      <if test="repairsNumber != null">
        #{repairsNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hbxy.ssm.app.repair.model.RepairsExample" resultType="java.lang.Long">
    select count(*) from ap_repairs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ap_repairs
    <set>
      <if test="record.repairsId != null">
        repairs_id = #{record.repairsId,jdbcType=VARCHAR},
      </if>
      <if test="record.repairsNo != null">
        repairs_no = #{record.repairsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.repairsPrice != null">
        repairs_price = #{record.repairsPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.repairsName != null">
        repairs_name = #{record.repairsName,jdbcType=VARCHAR},
      </if>
      <if test="record.repairsNumber != null">
        repairs_number = #{record.repairsNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ap_repairs
    set repairs_id = #{record.repairsId,jdbcType=VARCHAR},
      repairs_no = #{record.repairsNo,jdbcType=VARCHAR},
      repairs_price = #{record.repairsPrice,jdbcType=VARCHAR},
      repairs_name = #{record.repairsName,jdbcType=VARCHAR},
      repairs_number = #{record.repairsNumber,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hbxy.ssm.app.repair.model.Repairs">
    update ap_repairs
    <set>
      <if test="repairsNo != null">
        repairs_no = #{repairsNo,jdbcType=VARCHAR},
      </if>
      <if test="repairsPrice != null">
        repairs_price = #{repairsPrice,jdbcType=VARCHAR},
      </if>
      <if test="repairsName != null">
        repairs_name = #{repairsName,jdbcType=VARCHAR},
      </if>
      <if test="repairsNumber != null">
        repairs_number = #{repairsNumber,jdbcType=INTEGER},
      </if>
    </set>
    where repairs_id = #{repairsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbxy.ssm.app.repair.model.Repairs">
    update ap_repairs
    set repairs_no = #{repairsNo,jdbcType=VARCHAR},
      repairs_price = #{repairsPrice,jdbcType=VARCHAR},
      repairs_name = #{repairsName,jdbcType=VARCHAR},
      repairs_number = #{repairsNumber,jdbcType=INTEGER}
    where repairs_id = #{repairsId,jdbcType=VARCHAR}
  </update>
</mapper>