<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbxy.ssm.app.hydr.mapper.ApHydrMapper">
  <resultMap id="BaseResultMap" type="com.hbxy.ssm.app.hydr.model.ApHydr">
    <id column="hydr_id" jdbcType="INTEGER" property="hydrId" />
    <result column="drom_no" jdbcType="VARCHAR" property="dromNo" />
    <result column="hydr_data" jdbcType="TIMESTAMP" property="hydrData" />
    <result column="hydr_free" jdbcType="VARCHAR" property="hydrFree" />
    <result column="hydr_free_state" jdbcType="VARCHAR" property="hydrFreeState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hydr_id, drom_no, hydr_data, hydr_free, hydr_free_state
  </sql>
  <select id="selectByExample" parameterType="com.hbxy.ssm.app.hydr.model.ApHydrExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ap_hydr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ap_hydr
    where hydr_id = #{hydrId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ap_hydr
    where hydr_id = #{hydrId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hbxy.ssm.app.hydr.model.ApHydrExample">
    delete from ap_hydr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hbxy.ssm.app.hydr.model.ApHydr">
    insert into ap_hydr (hydr_id, drom_no, hydr_data, 
      hydr_free, hydr_free_state)
    values (#{hydrId,jdbcType=INTEGER}, #{dromNo,jdbcType=VARCHAR}, #{hydrData,jdbcType=TIMESTAMP}, 
      #{hydrFree,jdbcType=VARCHAR}, #{hydrFreeState,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hbxy.ssm.app.hydr.model.ApHydr">
    insert into ap_hydr
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hydrId != null">
        hydr_id,
      </if>
      <if test="dromNo != null">
        drom_no,
      </if>
      <if test="hydrData != null">
        hydr_data,
      </if>
      <if test="hydrFree != null">
        hydr_free,
      </if>
      <if test="hydrFreeState != null">
        hydr_free_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hydrId != null">
        #{hydrId,jdbcType=INTEGER},
      </if>
      <if test="dromNo != null">
        #{dromNo,jdbcType=VARCHAR},
      </if>
      <if test="hydrData != null">
        #{hydrData,jdbcType=TIMESTAMP},
      </if>
      <if test="hydrFree != null">
        #{hydrFree,jdbcType=VARCHAR},
      </if>
      <if test="hydrFreeState != null">
        #{hydrFreeState,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hbxy.ssm.app.hydr.model.ApHydrExample" resultType="java.lang.Long">
    select count(*) from ap_hydr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ap_hydr
    <set>
      <if test="record.hydrId != null">
        hydr_id = #{record.hydrId,jdbcType=INTEGER},
      </if>
      <if test="record.dromNo != null">
        drom_no = #{record.dromNo,jdbcType=VARCHAR},
      </if>
      <if test="record.hydrData != null">
        hydr_data = #{record.hydrData,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hydrFree != null">
        hydr_free = #{record.hydrFree,jdbcType=VARCHAR},
      </if>
      <if test="record.hydrFreeState != null">
        hydr_free_state = #{record.hydrFreeState,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ap_hydr
    set hydr_id = #{record.hydrId,jdbcType=INTEGER},
      drom_no = #{record.dromNo,jdbcType=VARCHAR},
      hydr_data = #{record.hydrData,jdbcType=TIMESTAMP},
      hydr_free = #{record.hydrFree,jdbcType=VARCHAR},
      hydr_free_state = #{record.hydrFreeState,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hbxy.ssm.app.hydr.model.ApHydr">
    update ap_hydr
    <set>
      <if test="dromNo != null">
        drom_no = #{dromNo,jdbcType=VARCHAR},
      </if>
      <if test="hydrData != null">
        hydr_data = #{hydrData,jdbcType=TIMESTAMP},
      </if>
      <if test="hydrFree != null">
        hydr_free = #{hydrFree,jdbcType=VARCHAR},
      </if>
      <if test="hydrFreeState != null">
        hydr_free_state = #{hydrFreeState,jdbcType=VARCHAR},
      </if>
    </set>
    where hydr_id = #{hydrId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbxy.ssm.app.hydr.model.ApHydr">
    update ap_hydr
    set drom_no = #{dromNo,jdbcType=VARCHAR},
      hydr_data = #{hydrData,jdbcType=TIMESTAMP},
      hydr_free = #{hydrFree,jdbcType=VARCHAR},
      hydr_free_state = #{hydrFreeState,jdbcType=VARCHAR}
    where hydr_id = #{hydrId,jdbcType=INTEGER}
  </update>
</mapper>